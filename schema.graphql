schema @site(type: "kanban/test3") {
  query: Query
  mutation: Mutation
}

type Query {
  allBoards: [Board]
  board(id: ID!): Board
  allCards: [Card]
  card(id: ID!): [Card] @site(history: "asc")
  allColumns: [Column]
  column(id: ID!): Column
}

type Mutation {
  createBoard(name: String!, description: String, columnIds: [ID]): Board
  updateBoard(
    id: ID!
    name: String
    description: String
    columnIds: [ID]
  ): Board @site(mutation: "update")
  deleteBoard(id: ID!): Board @site(mutation: "delete")
  createColumn(column: ColumnInput): Column
  createColumns(columns: [ColumnInput]): [Column]
  updateColumn(
    id: ID!
    name: String
    description: String
    cardIds: [ID]
  ): Column @site(mutation: "update")
  deleteColumn(id: ID!): Column @site(mutation: "delete")
  createCard(
    title: String!
    description: String
    priority: Int!
    boardId: ID!
  ): Card
  updateCard(
    id: ID!
    title: String
    description: String
    priority: Int
    boardId: ID
  ): Card @site(mutation: "update")
  deleteCard(id: ID!): Card @site(mutation: "delete")
}

input ColumnInput {
  id: ID
  name: String!
  description: String
  cardIds: [ID]
}

type Board {
  id: ID!
  name: String!
  description: String
  columns: [Column]! @site(each: "columnIds")
}

type Column {
  id: ID!
  name: String!
  description: String
  cards: [Card]! @site(each: "cardIds")
}

type Card {
  id: ID!
  title: String!
  _siteValidTime: String
  description: String
  priority: Int!
  board: Board @site(ref: "boardId")
}
